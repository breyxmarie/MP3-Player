/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor. 
 */

package group7_mp3_player;

import javax.sound.sampled.Clip;

/**
 *
 * @author miaag
 */
public class try_langs extends javax.swing.JFrame {

    /**
     * Creates new form try_langs
     */
    static musicPlayer player = musicPlayer.getInstance();
    static String filepath = "Sun and Moon.wav";
    static long clipTimePosition;
    
    static boolean isPlaying = true;
    static boolean isLooping = false;
    
    
    public try_langs() {
        initComponents();
        
        player.loadMusic(filepath);
        
    }

  
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playbtn = new javax.swing.JButton();
        pausebtn = new javax.swing.JButton();
        loopbtn = new javax.swing.JButton();
        fileinputtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        loadbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playbtn.setText("Play");
        playbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playbtnActionPerformed(evt);
            }
        });

        pausebtn.setText("Pause");
        pausebtn.setToolTipText("");
        pausebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pausebtnActionPerformed(evt);
            }
        });

        loopbtn.setText("Loop");
        loopbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopbtnActionPerformed(evt);
            }
        });

        fileinputtxt.setText("jTextField1");

        jLabel1.setText("jLabel1");

        loadbtn.setText("Load");
        loadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadbtnActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/group7_mp3_player/vinyl.gif"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(36, 36, 36)
                                .addComponent(fileinputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(loadbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playbtn)
                                .addGap(33, 33, 33)
                                .addComponent(pausebtn)
                                .addGap(37, 37, 37)
                                .addComponent(loopbtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileinputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(loadbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playbtn)
                    .addComponent(pausebtn)
                    .addComponent(loopbtn))
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playbtnActionPerformed
        // TODO add your handling code here:
        player.clip.setMicrosecondPosition(0);
        //resets the pause function 
        clipTimePosition = 0;
        //start the music
        player.clip.start();
        
    }//GEN-LAST:event_playbtnActionPerformed

    private void pausebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pausebtnActionPerformed
        
        if(isPlaying){
            //get the current position of the song played
            clipTimePosition = player.clip.getMicrosecondPosition();
            player.clip.stop();
            pausebtn.setText("Resume");
        }
        else{
            //resume the song
            player.clip.setMicrosecondPosition(clipTimePosition);
            player.clip.start();
            pausebtn.setText("Pause");
            
        }
        
        isPlaying = !isPlaying;
    }//GEN-LAST:event_pausebtnActionPerformed

    private void loopbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopbtnActionPerformed
        // TODO add your handling code here:
        if(!isLooping){
            player.clip.loop(Clip.LOOP_CONTINUOUSLY);
        }
        else{
            player.clip.loop(0);
            
        }
        
        isLooping = !isLooping;
        
    }//GEN-LAST:event_loopbtnActionPerformed

    private void loadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadbtnActionPerformed
        filepath = fileinputtxt.getText();
        //load a new file
        player.clip.stop();
        //when we play a new song, it starts to 0
        player.clip.setMicrosecondPosition(0);
        clipTimePosition = 0;
        //calling the function loadMusic
        player.loadMusic(filepath);
    }//GEN-LAST:event_loadbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(try_langs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(try_langs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(try_langs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(try_langs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new try_langs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fileinputtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loadbtn;
    private javax.swing.JButton loopbtn;
    private javax.swing.JButton pausebtn;
    private javax.swing.JButton playbtn;
    // End of variables declaration//GEN-END:variables
}
