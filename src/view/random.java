/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Control;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import model.Database;

/**
 *
 * @author miaag
 */
public class random extends javax.swing.JFrame {

    /**
     * Creates new form random
     */
    
    Control remoteControl = new Control();
    
    public random() {
        initComponents();
      //  remoteControl.getLyrics();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playbtn = new javax.swing.JButton();
        forwardbtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        albumpic = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lyricsarea = new javax.swing.JTextArea();
        volumeslide = new javax.swing.JSlider();
        upVolumebtn = new javax.swing.JButton();
        downvolumebtn = new javax.swing.JButton();
        musicbutton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbmusic = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playbtn.setText("Play");
        playbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playbtnActionPerformed(evt);
            }
        });

        forwardbtn.setText("Forward");
        forwardbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardbtnActionPerformed(evt);
            }
        });

        backbtn.setText("Back");
        backbtn.setActionCommand("");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        albumpic.setText("jLabel1");

        lyricsarea.setColumns(20);
        lyricsarea.setRows(5);
        jScrollPane1.setViewportView(lyricsarea);

        volumeslide.setMaximum(6);
        volumeslide.setMinimum(-80);
        volumeslide.setToolTipText("");
        volumeslide.setValue(-80);
        volumeslide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumeslideStateChanged(evt);
            }
        });

        upVolumebtn.setText("Volume Up");
        upVolumebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upVolumebtnActionPerformed(evt);
            }
        });

        downvolumebtn.setText("Volume Down");
        downvolumebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downvolumebtnActionPerformed(evt);
            }
        });

        musicbutton.setText("Music");
        musicbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musicbuttonActionPerformed(evt);
            }
        });

        tbmusic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title", "Artist"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbmusic.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbmusic);
        if (tbmusic.getColumnModel().getColumnCount() > 0) {
            tbmusic.getColumnModel().getColumn(0).setResizable(false);
            tbmusic.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backbtn)
                                .addGap(28, 28, 28)
                                .addComponent(playbtn)
                                .addGap(30, 30, 30)
                                .addComponent(musicbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(forwardbtn)))
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(albumpic)
                        .addGap(120, 120, 120)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(upVolumebtn)
                            .addComponent(downvolumebtn))
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(volumeslide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(318, 318, 318))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(backbtn)
                                    .addComponent(playbtn)
                                    .addComponent(forwardbtn)
                                    .addComponent(musicbutton))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(upVolumebtn)
                                .addGap(47, 47, 47)
                                .addComponent(downvolumebtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volumeslide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(albumpic))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playbtnActionPerformed
        // TODO add your handling code here:
        String pics = remoteControl.PicFile();
        lyricsarea.setText(remoteControl.getLyrics());
        albumpic.setIcon(new ImageIcon(pics));
         
        remoteControl.playmusic();
        
    }//GEN-LAST:event_playbtnActionPerformed

    private void forwardbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardbtnActionPerformed
        // TODO add your handling code here:
         remoteControl.NextMusic();
         lyricsarea.setText(remoteControl.getLyrics());
         String pics = remoteControl.PicFile();
       
        albumpic.setIcon(new ImageIcon(pics));
       // remoteControl.playmusic();
    }//GEN-LAST:event_forwardbtnActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        remoteControl.BackMusic();
        lyricsarea.setText(remoteControl.getLyrics());
         String pics = remoteControl.PicFile();
       
        albumpic.setIcon(new ImageIcon(pics));
    }//GEN-LAST:event_backbtnActionPerformed

    private void volumeslideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumeslideStateChanged
        // TODO add your handling code here:
        
        
        remoteControl.changeVolume(volumeslide.getValue());
    }//GEN-LAST:event_volumeslideStateChanged

    private void upVolumebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upVolumebtnActionPerformed
        // TODO add your handling code here:
        remoteControl.volumeUp();
    }//GEN-LAST:event_upVolumebtnActionPerformed

    private void downvolumebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downvolumebtnActionPerformed
        // TODO add your handling code here:
        remoteControl.volumeDown();
    }//GEN-LAST:event_downvolumebtnActionPerformed

    private void musicbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musicbuttonActionPerformed
        // TODO add your handling code here:
       
       DefaultTableModel dpmusic = (DefaultTableModel)tbmusic.getModel();
     //  dpmusic.addRow(dbmusic);
        
    }//GEN-LAST:event_musicbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(random.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(random.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(random.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(random.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new random().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel albumpic;
    private javax.swing.JButton backbtn;
    private javax.swing.JButton downvolumebtn;
    private javax.swing.JButton forwardbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea lyricsarea;
    private javax.swing.JButton musicbutton;
    private javax.swing.JButton playbtn;
    private javax.swing.JTable tbmusic;
    private javax.swing.JButton upVolumebtn;
    private javax.swing.JSlider volumeslide;
    // End of variables declaration//GEN-END:variables
}
